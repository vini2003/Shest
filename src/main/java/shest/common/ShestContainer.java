package shest.common;import net.minecraft.entity.player.PlayerEntity;import net.minecraft.entity.player.PlayerInventory;import net.minecraft.inventory.InventoryChangedListener;import net.minecraft.text.Text;import net.minecraft.util.math.BlockPos;import shest.entity.ShestBlockEntity;import spinnery.common.container.BaseContainer;import spinnery.widget.WAbstractWidget;import spinnery.widget.WInterface;import spinnery.widget.WSlot;public class ShestContainer extends BaseContainer {    public static final int SHEST_INVENTORY = 1;    ShestBlockEntity blockEntity;    public int x;    public int y;    public int m;    public Text name;    public PlayerEntity player;    public InventoryChangedListener listener = inventory -> sendContentUpdates();    public ShestContainer(int synchronizationID, Text name, PlayerInventory playerInventory, BlockPos pos, int x, int y, int m) {        super(synchronizationID, playerInventory);        this.name = name;        this.player = playerInventory.player;        this.x = x;        this.y = y;        this.m = m;        this.blockEntity = ((ShestBlockEntity) getWorld().getBlockEntity(pos));        WInterface mainInterface = getInterface();        getInventories().put(SHEST_INVENTORY, blockEntity);        blockEntity.addListener(this::onContentChanged);        WSlot.addHeadlessArray(mainInterface, 0, SHEST_INVENTORY, x, y);        WSlot.addHeadlessPlayerInventory(mainInterface);        for (WAbstractWidget widget : mainInterface.getWidgets()) {            if (!(widget instanceof WSlot)) continue;            WSlot slot = (WSlot) widget;            if (slot.getInventoryNumber() == SHEST_INVENTORY) {                slot.setOverrideMaximumCount(true);                slot.setMaximumCount(m);            }        }        if (!world.isClient) {            blockEntity.sync();        }    }    @Override    public void close(PlayerEntity player) {        blockEntity.removeListener(listener);        super.close(player);    }}